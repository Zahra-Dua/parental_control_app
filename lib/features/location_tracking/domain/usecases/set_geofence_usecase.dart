import 'package:dartz/dartz.dart';
import 'package:equatable/equatable.dart';
import 'package:parental_control_app/core/errors/failures.dart';
import 'package:parental_control_app/core/usecase/usecase.dart';
import 'package:parental_control_app/features/location_tracking/domain/entities/geofence_zone_entity.dart';
import 'package:parental_control_app/features/location_tracking/domain/repositories/geofence_repository.dart';

class SetGeofenceParams extends Equatable {
  final String childId;
  final String name;
  final double centerLatitude;
  final double centerLongitude;
  final double radiusMeters;
  final String? description;
  final String? color;

  const SetGeofenceParams({
    required this.childId,
    required this.name,
    required this.centerLatitude,
    required this.centerLongitude,
    required this.radiusMeters,
    this.description,
    this.color,
  });

  @override
  List<Object?> get props => [
        childId,
        name,
        centerLatitude,
        centerLongitude,
        radiusMeters,
        description,
        color,
      ];
}

class SetGeofenceUseCase implements UseCase<GeofenceZoneEntity, SetGeofenceParams> {
  final GeofenceRepository repository;

  SetGeofenceUseCase(this.repository);

  @override
  Future<Either<Failure, GeofenceZoneEntity>> call(SetGeofenceParams params) async {
    // Create the geofence zone entity
    final zone = GeofenceZoneEntity(
      id: '', // Will be generated by Firebase
      childId: params.childId,
      name: params.name,
      centerLatitude: params.centerLatitude,
      centerLongitude: params.centerLongitude,
      radiusMeters: params.radiusMeters,
      createdAt: DateTime.now(),
      description: params.description,
      color: params.color ?? '#4A90E2',
    );

    // Validate the zone first
    final validationResult = await repository.validateGeofenceZone(zone);
    
    return validationResult.fold(
      (failure) => Left(failure),
      (isValid) {
        if (!isValid) {
          return const Left(ValidationFailure('The geofencing zone is outside the valid range. Please adjust the zone.'));
        }
        return repository.createGeofenceZone(zone);
      },
    );
  }
}